# Stage 1: Build the uploader/quark-exporter binary
FROM golang:1.21.4-bullseye as builder

ENV GOPROXY=https://go.repo.eng.netapp.com
ENV GOSUMDB=off

COPY uploader-go/uploader /src/uploader
COPY supportability/quark.netapp.io/quark-exporter /src/quark-exporter

# Build the uploader binary
WORKDIR /src/uploader

RUN go mod download
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=on go build -a -o bin/uploader ./cmd/*.go

# Build the quark-exporter binary
WORKDIR /src/quark-exporter
RUN go mod download

RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=on go test ./...
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=on go build -a -o bin/quark-exporter ./cmd/*.go

# Stage 2: Build the final supportability image
FROM alpine:3.18

LABEL vendor="NetApp Inc"
LABEL version="1.0"
LABEL description="Quark supportability container"

ARG site=openlab
COPY site/${site}/apk/repositories /etc/apk/repositories

RUN apk add --no-cache net-tools procps iproute2 python3

ENV PATH="/usr/local/bin:${PATH}"

WORKDIR /supportability

#binary will be at /supportability/bin/uploader
#binary will be at /supportability/bin/quark-exporter
COPY --from=builder /src/uploader/bin/uploader ./bin/uploader
COPY --from=builder /src/quark-exporter/bin/quark-exporter ./bin/quark-exporter

COPY supportability/start_container.sh .
COPY dmap-bin/ /usr/local/bin/
COPY supportability/on_crash/crash_manifest.xml .

RUN ln -s /supportability/start_container.sh /usr/local/bin/start_container \
    && ln -s /supportability/bin/quark-exporter /usr/local/bin/quark_exporter



RUN echo "export PS1='\u@supportability:\w\$ '" >> /root/.bashrc